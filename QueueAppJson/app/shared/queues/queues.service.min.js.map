{"version":3,"sources":["shared/queues/queues.service.js"],"names":["QueuesService","filterFilter","$http","getQueues","method","url","then","response","queues","data","error","console","log","getQueueById","id","getCurrent","current","setCurrent","queue","getOperatorQueues","newQueue","push","editQueue","newValues","angular","merge","deleteQueue","indexOf","index","splice","this","module","service","$inject"],"mappings":"CAAA,WACE,YAQA,SAASA,GAAcC,EAAcC,GAYnC,QAASC,KACP,MAAOD,IACLE,OAAQ,MACRC,IAAK,iCACJC,KAAK,SAASC,GAEf,MADAC,GAASD,EAASE,MAEjB,SAASC,GACVC,QAAQC,IAAIF,KAIhB,QAASG,GAAaC,GACpB,MAAOZ,IACLE,OAAQ,MACRC,IAAK,gCAAkCS,IACtCR,KAAK,SAASC,GACf,MAAOA,GAASE,MACf,SAASC,GACVC,QAAQC,IAAIF,KAIhB,QAASK,KACP,MAAOb,IACLE,OAAQ,MACRC,IAAK,kCACJC,KAAK,SAASC,GACf,MAAOM,GAAaN,EAASE,KAAKK,KACjC,SAASJ,GACVC,QAAQC,IAAIF,KACXJ,KAAK,SAASC,GAEf,MADAS,GAAUT,IAKd,QAASU,GAAWC,GAClB,MAAOhB,IACLE,OAAQ,MACRC,IAAK,gCACLI,MAAOK,GAAII,EAAMJ,MAChBR,KAAK,SAASC,GACf,MAAOA,GAASE,MACf,SAASC,GACVC,QAAQC,IAAIF,KAIhB,QAASS,GAAkBL,GACzB,MAAOZ,IACLE,OAAQ,MACRC,IAAK,yCAA2CS,IAC/CR,KAAK,SAASC,GAEf,MADAC,GAASD,EAASE,MAEjB,SAASC,GACVC,QAAQC,IAAIF,KAIhB,QAASU,GAASF,GAEhB,MADAP,SAAQC,IAAIM,GACLhB,GACLE,OAAQ,OACRC,IAAK,+BACLI,KAAMS,IACLZ,KAAK,SAASC,GAEf,MADAC,GAAOa,KAAKd,EAASE,MACdD,GACN,SAASE,GACVC,QAAQC,IAAIF,KAIhB,QAASY,GAAUJ,EAAOK,GACxB,GAAId,GAAOe,QAAQC,MAAMP,EAAOK,EAChC,OAAOrB,IACLE,OAAQ,MACRC,IAAK,gCAAkCa,EAAMJ,GAC7CL,KAAMA,IACLH,KAAK,SAASC,GACf,MAAOA,GAASE,MACf,SAASC,GACVC,QAAQC,IAAIF,KAIhB,QAASgB,GAAYR,GACnB,MAAOhB,IACLE,OAAQ,SACRC,IAAK,gCAAkCa,EAAMJ,GAC7CL,KAAMS,IACLZ,KAAK,SAASC,GACf,IAA8B,IAA3BC,EAAOmB,QAAQT,GAAc,CAC9B,GAAIU,GAAQpB,EAAOmB,QAAQT,EAC3BV,GAAOqB,OAAOD,EAAO,GAEvB,MAAOpB,IACN,SAASE,GACVC,QAAQC,IAAIF,KA/GhB,GACIM,GADAR,IAGJsB,MAAK3B,UAAYA,EACjB2B,KAAKf,WAAaA,EAClBe,KAAKb,WAAaA,EAClBa,KAAKX,kBAAoBA,EACzBW,KAAKV,SAAWA,EAChBU,KAAKR,UAAYA,EACjBQ,KAAKJ,YAAcA,EAhBrBF,QACGO,OAAO,YACPC,QAAQ,gBAAiBhC,GAE5BA,EAAciC,SAAW,eAAgB","file":"queues.service.min.js","sourcesContent":["(function(){\n  'use strict';\n\n  angular\n    .module('QueueApp')\n    .service('QueuesService', QueuesService);\n\n  QueuesService.$inject = ['filterFilter', '$http'];\n\n  function QueuesService(filterFilter, $http){\n    var queues = [];\n    var current;\n\n    this.getQueues = getQueues;\n    this.getCurrent = getCurrent;\n    this.setCurrent = setCurrent;\n    this.getOperatorQueues = getOperatorQueues;\n    this.newQueue = newQueue;\n    this.editQueue = editQueue;\n    this.deleteQueue = deleteQueue;\n\n    function getQueues(){\n      return $http({\n        method: 'GET',\n        url: 'http://localhost:3002/queues'\n      }).then(function(response){\n        queues = response.data;\n        return queues;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function getQueueById(id){\n      return $http({\n        method: 'GET',\n        url: 'http://localhost:3002/queues/' + id\n      }).then(function(response){\n        return response.data;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function getCurrent(){\n      return $http({\n        method: 'GET',\n        url: 'http://localhost:3002/current'\n      }).then(function(response){\n        return getQueueById(response.data.id);\n      }, function(error){\n        console.log(error);\n      }).then(function(response){\n        current = response;\n        return current;\n      });\n    }\n\n    function setCurrent(queue){\n      return $http({\n        method: 'PUT',\n        url: 'http://localhost:3002/current',\n        data: {id: queue.id}\n      }).then(function(response){\n        return response.data;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function getOperatorQueues(id){\n      return $http({\n        method: 'GET',\n        url: 'http://localhost:3002/queues?operator=' + id\n      }).then(function(response){\n        queues = response.data;\n        return queues;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function newQueue(queue){\n      console.log(queue);\n      return $http({\n        method: 'POST',\n        url: 'http://localhost:3002/queues',\n        data: queue\n      }).then(function(response){\n        queues.push(response.data);\n        return queues;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function editQueue(queue, newValues){\n      var data = angular.merge(queue, newValues);\n      return $http({\n        method: 'PUT',\n        url: 'http://localhost:3002/queues/' + queue.id,\n        data: data\n      }).then(function(response){\n        return response.data;\n      }, function(error){\n        console.log(error);\n      });\n    }\n\n    function deleteQueue(queue){\n      return $http({\n        method: 'DELETE',\n        url: 'http://localhost:3002/queues/' + queue.id,\n        data: queue\n      }).then(function(response){\n        if(queues.indexOf(queue) !== -1){\n          var index = queues.indexOf(queue);\n          queues.splice(index, 1);\n        }\n        return queues;\n      }, function(error){\n        console.log(error);\n      });\n    }\n  }\n})();"]}